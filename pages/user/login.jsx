import Head from 'next/head';
import loginStyles from '../../styles/Login.module.css';
import Link from 'next/link';
import { HiOutlineUser } from "react-icons/hi";
import { RiLock2Line } from 'react-icons/ri';
import { FaGoogle, FaFacebookF, FaTwitter } from 'react-icons/fa';
import { BsFillCheckCircleFill } from 'react-icons/bs';
import UserNav from '../../components/UserNav';
import Notification from '../../components/Notification';
//
import { app } from '../../firebaseConfig';
import {
  getAuth,
  signInWithEmailAndPassword,
  GoogleAuthProvider,
  signInWithPopup
} from "firebase/auth";
import { useState, useEffect } from 'react';
import { useRouter } from 'next/router';

const Login = () => {

  const [check, setCheck] = useState(false);
  const data = { section:'signIn'};

  const auth = getAuth();

  const googleProvider = new GoogleAuthProvider();

  const { push } = useRouter();

  const [Credentials, setCredentials] = useState({
    email:'',
    password:''
  });

  const changeUser = (e) =>{
    setCredentials({
      ...Credentials,
      [e.target.name]:e.target.value,
    });
  }
  const [Message, setMessage] = useState('');
  const [ShowNotification, setShowNotification] = useState(false);

  const showMessage =(message)=>{
    setMessage(message);
    setShowNotification(true);
    setTimeout(() => {
      setShowNotification(false)
    }, 2000);
  }

  const loginUser = async()=>{
    try {
      await signInWithEmailAndPassword(
        auth, 
        Credentials.email, 
        Credentials.password
      ).then((response) => {
        const user = response.user;
        sessionStorage.setItem('Token', user.accessToken);

        const userData = {
          'name':user.displayName,
          'email':user.email,
          'pic':user.photoURL
        }

        localStorage.setItem('UserData',JSON.stringify(userData));
        push('/')
      });
    } catch ({message}) {
      if(message === 'Firebase: Error (auth/wrong-password).'){
        showMessage('Contraseña incorrecta');
      }
    }
  }

  const signUpGoogle = () => {
    try {
      signInWithPopup(auth, googleProvider)
        .then((response) => {
          const user = response.user;
          sessionStorage.setItem('Token', user.accessToken);
          
          const userData = {
            'name':user.displayName,
            'email':user.email,
            'pic':user.photoURL
          }

          localStorage.setItem('UserData',JSON.stringify(userData));
          push('/')
        })
    } catch (error) {
      console.log(error);
    }
  }

  const rememberHandle=(e) => {
      const checked = e.target.checked;
      checked ? setCheck(checked) : setCheck(false);
  }

  useEffect(() => {
    let token = sessionStorage.getItem('Token');

    if (token) {
      push('/');
    }
  }, []);

  return (
    <div>
      <Head>
        <title>Login | Prueba Técnica - El Universo</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={loginStyles.background + ' h-screen flex items-center justify-center'}>
        <div className='bg-white lg:w-4/12 md:w-6/12 sm:w-12/12
            rounded-large drop-shadow-3xl mx-auto mt-6 py-8 px-10'>

          <Notification show={ShowNotification} message={Message} />

          <div className='form'>
            {/*Header*/}
            <header className="flex items-center justify-end text-sky-400">
              <UserNav section={data.section} />
            </header>
            {/***/}
            {/*Section*/}
            <section>
              <div className="relative text-gray-400 hover:text-sky-600 mb-4">
                <HiOutlineUser size={25} className='absolute left-0 top-2 transition duration-200' />
                <input type="email"
                  name='email'
                  className="w-full text-gray-600 pl-8 py-2 border-solid border-b-2 focus:border-sky-500 border-gray-400 outline-none"
                  placeholder='Usuario'
                  onChange={changeUser} />
              </div>

              <div className="relative text-gray-400 hover:text-sky-600 mb-4">
                <RiLock2Line size={25} className='absolute left-0 top-2 transition duration-200' />
                <input type="password"
                  name='password'
                  className='w-full text-gray-600 pl-8 py-2 border-solid border-b-2 focus:border-sky-500 border-gray-400 outline-none'
                  placeholder='Password'
                  onChange={changeUser} />
              </div>

              <div className="text-center">
                <button className='w-10/12 mx-auto my-6 p-4 rounded-full bg-sky-600 hover:bg-sky-800 text-white text-xl
                                transition duration-200 drop-shadow-xl hover:drop-shadow-md'
                  onClick={loginUser}>LOGIN</button>
              </div>

            </section>
            {/***/}
            {/*Footer*/}
            <footer>

              <div className="flex items-center justify-between">
                <div className="remember relative text-gray-400 hover:text-sky-600">
                  <input type="checkbox" id='remember'
                    className='relative z-50 form-check-input appearance-none h-4 w-4 border border-gray-300 rounded-full
                                  checked:border-sky-600 focus:outline-none p-3 align-top float-left mr-2 cursor-pointer'
                    onClick={rememberHandle} />
                  {check ? <BsFillCheckCircleFill className="absolute left-0 text-sky-600" size={25} /> : null}
                  <label className="transition duration-200" htmlFor="remember">Remember me</label>
                </div>
                <Link href='/recover'><a className="border-dashed border-b-2 border-sky-600 text-sky-500 hover:text-sky-600">Recover password</a></Link>
              </div>
              {/*Social*/}
              <div className="flex items-center justify-between mt-6 transition duration-200 text-gray-400 hover:text-sky-600">
                <span>Iniciar con</span>
                <div className='flex items-center justify-between grid grid-flow-col gap-4 text-gray-400'>
                  <button 
                    className="outline-0 bg-none border-none hover:text-red-600 transition duration-200"
                    onClick={signUpGoogle}>
                      <FaGoogle size={30} />
                  </button>
                  <Link href="/b"><a className="hover:text-blue-600 transition duration-200"><FaFacebookF size={30} /></a></Link>
                  <Link href="/c"><a className="hover:text-sky-400 transition duration-200"><FaTwitter size={35} /></a></Link>
                </div>
                {/***/}
              </div>

            </footer>
            {/***/}
          </div>
        </div>
      </div>
    </div>
  )
}
export default Login;